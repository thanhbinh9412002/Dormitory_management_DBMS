<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTimKiem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>